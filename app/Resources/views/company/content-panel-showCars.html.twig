{% extends './user/panel.html.twig' %}

{% block content %}
<div class="col col-lg-10" style="padding:30px">

<h1>Coches de la compañia</h1>
<div class="row" style="padding:20px 15px">
    <a href="{{ path('register_car') }}" class="btn bg-success text-light boldText">Crear nuevo coche</a>
</diV>
<div class="row">
<div class="input-group col-3" style="padding: 30px 15px;height:100% ">
    <div class="input-group-prepend" >
        <div class="input-group-text" style="background: #263238; color:#fff;height:100%"><b>Matrícula</b></div>
    </div>
    <input type="text" class="form-control search-data-field" data-field='plate'  placeholder="{{'Introduce Matrícula' | trans}}" >
</div>

<div class="input-group col-3" style="padding: 30px 15px; height:100%">
    <div class="input-group-prepend" >
        <div class="input-group-text" style="background: #263238; color:#fff;height:100%"><b>Modelo</b></div>
    </div>
    <input type="text" class="form-control search-data-field" data-field='model'  placeholder="{{'Introduce Modelo' | trans}}" >
</div>

<div class="input-group col-3" style="padding: 30px 15px; height:100%">
    <div class="input-group-prepend" style="height:100%" >
        <div class="input-group-text" style="background: #263238; color:#fff;%"><b>Estado</b></div>
    </div>
    <select class="form-control search-data-field styleSelectDatatables" data-field='state'>
        <option value="">Seleccione Estado</option>
        <option value="Disponible">Disponible</option>
        <option value="Averiado">Averiado</option>
        <option value="En reparación">En reparación</option>
    </select>
</div>


</div>




{# <div style="padding: 10px; margin-bottom: 15px">
    <label>Employee office name search: <label>
    <input class = "form-control search-data-field" type="text" data-field='employeeOffice' placeholder="{{'Employee office' | trans}}">
</div> #}

{# <input class = "form-control search-data-field" type="text" data-field='country' placeholder="{{'Pais' | trans}}">
<input class = "form-control search-data-field" type="text" data-field='country' placeholder="{{'Pais' | trans}}">
<input class = "form-control search-data-field" type="text" data-field='country' placeholder="{{'Pais' | trans}}">
<input class = "form-control search-data-field" type="text" data-field='country' placeholder="{{'Pais' | trans}}"> #}

    <table id="carsTable" class="table table-hover">
        <tr>
            <thead style="background:#263238">
                <th scope="col" class="text-light">Matrícula</th>
                <th scope="col" class="text-light">Marca</th>
                <th scope="col" class="text-light">Modelo</th>
                <th scope="col" class="text-light">Versión</th>
                <th scope="col" class="text-light">Estado</th>
                <th scope="col" class="text-light">Acciones</th>
            </thead>
        </tr>
        <tbody style="color: #000">
        </tbody>
    </table>
</div>


{% endblock %}

{% block javascripts %}
{{ parent() }}
<script>


{


let init = function(){

// Variable auxilair
    let time = null;


    $('.search-data-field').each(function( index ) {

        if ($( this ).prop('nodeName').toUpperCase() === "INPUT"){
            $(this).keyup(function(){
                    clearInterval(time);
                        time = setTimeout(function(){
                        // Creamos la variable de búsquedas
                            let searchs = new Object();
                            // Limpiamos el tiempo
                            clearInterval(time);
                                $('.search-data-field').each(function(){
                                    searchs[$(this).data('field')] = $(this).val();
                                });
                                carsTable.search(JSON.stringify(searchs)).draw();
                            },500);
                });
        }else if($( this ).prop('nodeName').toUpperCase() === "SELECT"){
            $(this).change(function(){
                clearInterval(time);
                    time = setTimeout(function(){
                        // Creamos la variable de búsquedas
                        let searchs = new Object();
                        // Limpiamos el tiempo
                        clearInterval(time);
                            $('.search-data-field').each(function(){
                                searchs[$(this).data('field')] = $(this).val();
                            });
                            carsTable.search(JSON.stringify(searchs)).draw();
                        },500);
            }) 
        }
    });

function loadFunctionDataTable(){


    
}

function loadStyles(){
    $(".dt-buttons").css({
        "margin-bottom" : "20px"
    });
}

//Inicializar la tabla
let carsTable = $("#carsTable").DataTable({
    dom: 'Blrtip',
    buttons: [
        {
            extend: 'copyHtml5',
            className: 'btn-info'
        },
        {
            extend: 'excelHtml5',
            messageTop: 'The information in this table is copyright to Sirius Cybernetics Corp.',
            title: 'Data export',
            className: 'btn-success'
        },
        {
            extend: 'csvHtml5',
            className: 'btn-secondary'
        },
        {
            extend: 'pdfHtml5',
            orientation: 'landscape',
            pageSize: 'LEGAL',
            className: 'btn-danger'
        }
    ],
    rowId: 'idRow',
    responsive: false,
    autoWidth: false,
    "processing": true,
    "serverSide": true,
    "pagingType": "full_numbers",
    "lengthMenu": [[10, 25, 50, 100, -1], [10, 25, 50, 100, "{{('Todos')|trans}}"]],
    language: {
        "sProcessing":     "{{ ('Procesando...') | trans }}",
        "sLengthMenu":     "{{ ('Mostrar _MENU_ registros') | trans }}",
        "sZeroRecords":    "{{ ('No se encontraron resultados') | trans }}",
        "sEmptyTable":     "{{ ('Ningún dato disponible en esta tabla') | trans }}",
        "sInfo":           "{{ ('Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros') | trans }}",
        "sInfoEmpty":      "{{ ('Mostrando registros del 0 al 0 de un total de 0 registros') | trans }}",
        "sInfoFiltered":   "{{ ('(filtrado de un total de _MAX_ registros)') | trans }}",
        "sInfoPostFix":    "",
        "sSearch":         "{{ ('Buscar:') | trans }}",
        "sUrl":            "",
        "sInfoThousands":  ",",
        "sLoadingRecords": "{{ ('Cargando...') | trans }}",
        "oPaginate": {
        "sFirst":    "{{ ('Primero') | trans }}",
        "sLast":     "{{ ('Último') | trans }}",
        "sNext":     "{{ ('Siguiente') | trans }}",
        "sPrevious": "{{ ('Anterior') | trans }}"
        },
        "oAria": {
        "sSortAscending":  "{{ (': Activar para ordenar la columna de manera ascendente') | trans }}",
        "sSortDescending": "{{ (': Activar para ordenar la columna de manera descendente') | trans }}"
        }
    },
    ajax: {
        url: "{{path('list_all_cars')}}",
        type: "POST",
        data: {
            // pasamos datos si es necesario
        }
    },
    columns: [

        {data:'plate', render: function(data, type, row, meta){
            let html = `<span style="border-radius:3px;background:#263238;color:#fff;padding:7px; font-weight:bold">${data}</span>`;


            return html;
        }},
        {data:'trademark'},
        {data:'model'},
        {data:'version'},
        {data:'state', render: function(data, type, row, meta){
            let html = ``;

            console.log(data);
            if (data.toLowerCase() == "disponible"){

                html += `<span style="border-radius:3px;background:green;color:#fff;padding:7px; font-weight:bold">${data}</span>`
                //$(data).css("color", "green");
            }else if (data.toLowerCase() == "averiado"){

                html += `<span style="border-radius:3px;background:red;color:#fff;padding:7px; font-weight:bold">${data}</span>`
            }else if (data.toLowerCase() == "en reparación"){
                html += `<span style="border-radius:3px;background:orange;color:#fff;padding:7px; font-weight:bold">${data}</span>`
            }

            return html;
        }},
        {data:'', render: function(data, type, row, meta){
            let html = ``;
            let pathEdit = "{{ path('edit_car', {'idCar': 'pepe'}) }}";
            let pathDelete = "{{ path('delete_car', {'idCar': 'pepe'}) }}";
            pathEdit=pathEdit.replace("pepe", row.id);
            pathDelete=pathDelete.replace("pepe", row.id);
                html += "<a href='"+ pathEdit +"' style=\"border-radius:3px;background:#007BFF;color:#fff;padding:7px; font-weight:bold\">Editar</a>";
                html += "<a href='" + pathDelete + "' style=\"border-radius:3px;background:red;color:#fff;padding:7px; font-weight:bold;margin-left:5px;\">Eliminar</a>";

            return html;
        }}
    ],
    
    drawCallback: function(settings) {
        //loadFunctionsOfButtons();
        loadStyles();
        loadFunctionDataTable();
    }
});
}

$(init)

}

</script>
{% endblock %}
